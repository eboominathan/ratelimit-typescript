var b=class f{constructor(e,t,n){this.prefix=e;this.table=t;this.bucket=n}toString(){return[this.prefix,this.table,this.bucket].join(":")}static fromString(e){let[t,n,s]=e.split(":");return new f(t,n,parseInt(s))}},g=class{cache;ttl;constructor(e){this.cache=new Map,this.ttl=e,setInterval(()=>{let t=Date.now();for(let[n,{createdAt:s}]of this.cache)t-s>this.ttl&&this.cache.delete(n)},this.ttl*10)}get(e){let t=this.cache.get(e);return t?Date.now()-t.createdAt>this.ttl?(this.cache.delete(e),null):t.value:null}set(e,t){this.cache.set(e,{createdAt:Date.now(),value:t})}},p=class{redis;prefix;bucketSize;retention;cache=new g(6e4);constructor(e){this.redis=e.redis,this.prefix=e.prefix??"@upstash/analytics",this.bucketSize=this.parseWindow(e.window),this.retention=e.retention?this.parseWindow(e.retention):void 0}validateTableName(e){if(!/^[a-zA-Z0-9_-]+$/.test(e))throw new Error(`Invalid table name: ${e}. Table names can only contain letters, numbers, dashes and underscores.`)}parseWindow(e){if(typeof e=="number"){if(e<=0)throw new Error(`Invalid window: ${e}`);return e}let t=/^(\d+)([smhd])$/;if(!t.test(e))throw new Error(`Invalid window: ${e}`);let[,n,s]=e.match(t),a=parseInt(n);switch(s){case"s":return a*1e3;case"m":return a*1e3*60;case"h":return a*1e3*60*60;case"d":return a*1e3*60*60*24;default:throw new Error(`Invalid window unit: ${s}`)}}async ingest(e,...t){this.validateTableName(e),await Promise.all(t.map(async n=>{let s=n.time??Date.now(),a=Math.floor(s/this.bucketSize)*this.bucketSize,m=[this.prefix,e,a].join(":");await this.redis.hincrby(m,JSON.stringify({...n,time:void 0}),1)}))}async loadBuckets(e,t){this.validateTableName(e);let n=Date.now(),s=[];if(t.scan){let r=0,i=[this.prefix,e,"*"].join(":");do{let[h,c]=await this.redis.scan(r,{match:i});r=h;for(let u of c){let d=parseInt(u.split(":").pop());if(this.retention&&d<n-this.retention){await this.redis.del(u);continue}(d>=t.range[0]||d<=t.range[1])&&s.push(u)}}while(r!==0)}else{let r=Math.floor(n/this.bucketSize)*this.bucketSize;for(;r>t.range[1];)r-=this.bucketSize;for(;r>=t.range[0];)s.push([this.prefix,e,r].join(":")),r-=this.bucketSize}let a=[],m=[];for(let r of s){let i=this.cache.get(r);i?m.push({key:r,hash:i}):a.push(r)}let o=this.redis.pipeline();for(let r of a)o.hgetall(r);let l=a.length>0?await o.exec():[];for(let r=0;r<a.length;r++){let i=a[r],h=l[r];h&&this.cache.set(i,h),m.push({key:i,hash:h??{}})}return m.sort((r,i)=>r.hash.time-i.hash.time).map(r=>({...r,hash:Object.fromEntries(Object.entries(r.hash).map(i=>[i[0],Number(i[1])]))}))}async count(e,t){this.validateTableName(e);let n=await this.loadBuckets(e,{range:t.range});return await Promise.all(n.map(async({key:s,hash:a})=>({time:parseInt(s.split(":").pop()),count:Object.values(a).reduce((o,l)=>o+l,0)})))}async aggregateBy(e,t,n){this.validateTableName(e);let s=await this.loadBuckets(e,{range:n.range});return await Promise.all(s.map(async({key:m,hash:o})=>{let l={time:b.fromString(m).bucket};for(let[r,i]of Object.entries(o)){let h=JSON.parse(r);for(let[c,u]of Object.entries(h)){let d=h[t];l[d]||(l[d]={}),c!==t&&(l[d][u]||(l[d][u]=0),l[d][u]+=i)}}return l}))}async query(e,t){this.validateTableName(e);let n=await this.loadBuckets(e,{range:t.range});return await Promise.all(n.map(async({key:a,hash:m})=>{let o={time:b.fromString(a).bucket};for(let[l,r]of Object.entries(m)){let i=JSON.parse(l),h=!1;if(t?.where)for(let[c,u]of Object.entries(t.where)){if(!(c in i)){h=!0;break}if(i[c]!==u){h=!0;break}}if(!h)for(let[c,u]of Object.entries(i))t?.filter&&!t.filter.includes(c)||(o[c]||(o[c]={}),o[c][u]||(o[c][u]=0),o[c][u]+=r)}return o}))}};export{p as Analytics};
