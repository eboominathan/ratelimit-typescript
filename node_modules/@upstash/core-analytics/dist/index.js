"use strict";var g=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var v=Object.prototype.hasOwnProperty;var x=(m,e)=>{for(var t in e)g(m,t,{get:e[t],enumerable:!0})},T=(m,e,t,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of w(e))!v.call(m,n)&&n!==t&&g(m,n,{get:()=>e[n],enumerable:!(i=k(e,n))||i.enumerable});return m};var O=m=>T(g({},"__esModule",{value:!0}),m);var S={};x(S,{Analytics:()=>y});module.exports=O(S);var f=class m{constructor(e,t,i){this.prefix=e;this.table=t;this.bucket=i}toString(){return[this.prefix,this.table,this.bucket].join(":")}static fromString(e){let[t,i,n]=e.split(":");return new m(t,i,parseInt(n))}},p=class{cache;ttl;constructor(e){this.cache=new Map,this.ttl=e,setInterval(()=>{let t=Date.now();for(let[i,{createdAt:n}]of this.cache)t-n>this.ttl&&this.cache.delete(i)},this.ttl*10)}get(e){let t=this.cache.get(e);return t?Date.now()-t.createdAt>this.ttl?(this.cache.delete(e),null):t.value:null}set(e,t){this.cache.set(e,{createdAt:Date.now(),value:t})}},y=class{redis;prefix;bucketSize;retention;cache=new p(6e4);constructor(e){this.redis=e.redis,this.prefix=e.prefix??"@upstash/analytics",this.bucketSize=this.parseWindow(e.window),this.retention=e.retention?this.parseWindow(e.retention):void 0}validateTableName(e){if(!/^[a-zA-Z0-9_-]+$/.test(e))throw new Error(`Invalid table name: ${e}. Table names can only contain letters, numbers, dashes and underscores.`)}parseWindow(e){if(typeof e=="number"){if(e<=0)throw new Error(`Invalid window: ${e}`);return e}let t=/^(\d+)([smhd])$/;if(!t.test(e))throw new Error(`Invalid window: ${e}`);let[,i,n]=e.match(t),a=parseInt(i);switch(n){case"s":return a*1e3;case"m":return a*1e3*60;case"h":return a*1e3*60*60;case"d":return a*1e3*60*60*24;default:throw new Error(`Invalid window unit: ${n}`)}}async ingest(e,...t){this.validateTableName(e),await Promise.all(t.map(async i=>{let n=i.time??Date.now(),a=Math.floor(n/this.bucketSize)*this.bucketSize,d=[this.prefix,e,a].join(":");await this.redis.hincrby(d,JSON.stringify({...i,time:void 0}),1)}))}async loadBuckets(e,t){this.validateTableName(e);let i=Date.now(),n=[];if(t.scan){let r=0,s=[this.prefix,e,"*"].join(":");do{let[h,c]=await this.redis.scan(r,{match:s});r=h;for(let u of c){let b=parseInt(u.split(":").pop());if(this.retention&&b<i-this.retention){await this.redis.del(u);continue}(b>=t.range[0]||b<=t.range[1])&&n.push(u)}}while(r!==0)}else{let r=Math.floor(i/this.bucketSize)*this.bucketSize;for(;r>t.range[1];)r-=this.bucketSize;for(;r>=t.range[0];)n.push([this.prefix,e,r].join(":")),r-=this.bucketSize}let a=[],d=[];for(let r of n){let s=this.cache.get(r);s?d.push({key:r,hash:s}):a.push(r)}let o=this.redis.pipeline();for(let r of a)o.hgetall(r);let l=a.length>0?await o.exec():[];for(let r=0;r<a.length;r++){let s=a[r],h=l[r];h&&this.cache.set(s,h),d.push({key:s,hash:h??{}})}return d.sort((r,s)=>r.hash.time-s.hash.time).map(r=>({...r,hash:Object.fromEntries(Object.entries(r.hash).map(s=>[s[0],Number(s[1])]))}))}async count(e,t){this.validateTableName(e);let i=await this.loadBuckets(e,{range:t.range});return await Promise.all(i.map(async({key:n,hash:a})=>({time:parseInt(n.split(":").pop()),count:Object.values(a).reduce((o,l)=>o+l,0)})))}async aggregateBy(e,t,i){this.validateTableName(e);let n=await this.loadBuckets(e,{range:i.range});return await Promise.all(n.map(async({key:d,hash:o})=>{let l={time:f.fromString(d).bucket};for(let[r,s]of Object.entries(o)){let h=JSON.parse(r);for(let[c,u]of Object.entries(h)){let b=h[t];l[b]||(l[b]={}),c!==t&&(l[b][u]||(l[b][u]=0),l[b][u]+=s)}}return l}))}async query(e,t){this.validateTableName(e);let i=await this.loadBuckets(e,{range:t.range});return await Promise.all(i.map(async({key:a,hash:d})=>{let o={time:f.fromString(a).bucket};for(let[l,r]of Object.entries(d)){let s=JSON.parse(l),h=!1;if(t?.where)for(let[c,u]of Object.entries(t.where)){if(!(c in s)){h=!0;break}if(s[c]!==u){h=!0;break}}if(!h)for(let[c,u]of Object.entries(s))t?.filter&&!t.filter.includes(c)||(o[c]||(o[c]={}),o[c][u]||(o[c][u]=0),o[c][u]+=r)}return o}))}};0&&(module.exports={Analytics});
